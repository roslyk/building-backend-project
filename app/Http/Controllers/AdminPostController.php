<?php

namespace App\Http\Controllers;

use App\Models\Post;
use Illuminate\Http\Request;
use Illuminate\Validation\Rule;

class AdminPostController extends Controller
{
    // This is the controller that controls the administrative part of the website

    public function index()
    {

        // This method returns the view where the admin can see
        // all posts and then edit or delete them
        return view('posts.index', ['posts' => Post::latest()->get()]);


    }

    public function create()
    {

        // The page where posts are created
        return view('posts.create');



    }

    public function newPost()
    {

        $validatedPost = request()->validate(
            ['title' => 'required',
            'excerpt' => 'required',
            'body' => 'required',
            'slug' => Rule::unique('posts','slug'),
            'thumbnail' => 'required|image',
            'category_id' => Rule::exists('categories','id') // Not necessary!
        ]);

        // We need at user_id to create the post
        // This id is the authenticated user's id
        // and the authenticated user is the admin
        // 'chrisser'
        $validatedPost['user_id'] = auth()->user()->id;

        // After '='
        // Store the 'thumbnail' request element in thumbnails folder
        // using the default disk, which is 'public' - see config\filesystems.php
        $path = request()->file('thumbnail')->store('thumbnails');


        // $path is equal to something like
        // thumbnails/K4dGiWRbK8jLdzxQHBQyh1Kpf3mPRc3G24YMtErD.jpg
        // where K4dGiWRbK8jLdzxQHBQyh1Kpf3mPRc3G24YMtErD is an
        // autogenerated string
        $validatedPost['thumbnail'] = $path;

        // This path is then used to locate the image


        // Create the post from validated form inputs
        Post::create($validatedPost);


        // Return to creation page with a success message
        return back()->with('success', 'Post Created!');


    }

    public function edit(Post $post)
    {
        // A view where the current post is being edited
        return view('posts.edit', ['post' => $post]);
    }

    public function update(Post $post)
    {


        // $post carries with it the user id needed to update the post
        $validatedFormInputRequest=
        request()->validate(
        ['title' => 'required',
        'excerpt' => 'required',
        'body' => 'required',
        'slug' => ['required', Rule::unique('posts','slug')->ignore($post->id)],
        'thumbnail' => 'image',
        'category_id' => Rule::exists('categories','id')]
        );

        // If the request has a thumbnail
        // save this thumbnail on the private disk
        if( request()->has('thumbnail'))
        {
            // Take the file request element thumbnail and store it in
            // the folder 'thumbnails' - on the public disk!
            // How do I know that it is the public disk?
            // See default array key in config\filesystems.php.
            // Looking in config\filesystems.php we see that we
            // can access the files using the url
            // env('APP_URL').'/storage'. We use this when we
            // display posts
            $path = request()->file('thumbnail')->store('thumbnails');

            // $path is then equal to something like
            // 'thumbnails/kjldasdei342.jpf' which is then
            // saved under the 'thumbnail' array key in
            // $validatedFormInputRequest
            $validatedFormInputRequest['thumbnail'] = $path;

        }

        // The old post is then updated with the new input
        // Notice that 'user_id' is not altered and is the
        // same as it was originally
        $post->update($validatedFormInputRequest);

        // Return to edit page with a success message
        return back()->with('success', 'Post Updated!');








    }

    public function destroy(Post $post)
    {

        $post->delete();

        return back()->with('success', "Post deleted!");


    }
}
